---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: piped
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: piped
      version: 6.0.0
      sourceRef:
        kind: HelmRepository
        name: piped
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    frontend:
      image:
        # Pull-though cache
        repository: registry.skysolutions.fi/docker.io/1337kavin/piped-frontend
        tag: latest
        pullPolicy: Always

      env:
        BACKEND_HOSTNAME: api.piped.fi

    backend:
      podAnnotations:
        configmap.reloader.stakater.com/reload: "piped-backend-config"
      initContainers:
        01-init-db:
          image: ghcr.io/onedr0p/postgres-init:14.10
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: &secret piped-db-creds
      additionalContainers:
        gluetun:
          image: registry.skysolutions.fi/docker.io/qmcgaw/gluetun:v3.38.0
          imagePullPolicy: IfNotPresent
          env:
            VPN_TYPE: wireguard
            VPN_SERVICE_PROVIDER: airvpn
            VPN_INTERFACE: wg0
            FIREWALL: "off"
            DOT: "off"
            FIREWALL_VPN_INPUT_PORTS: 51820
            FIREWALL_OUTBOUND_SUBNETS: 10.51.0.0/16,10.50.0.0/16
            DNS_KEEP_NAMESERVER: "on"
            SERVER_REGIONS: Europe
            HTTPPROXY: "on"
            HTTPPROXY_LISTENING_ADDRESS: ":8888"
            HTTPPROXY_STEALTH: "on"
          envFrom:
            - secretRef:
                name: piped-vpnconfig
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
      image:
        #repository: registry.skysolutions.fi/library/piped
        #tag: "2024-04-06-2de41b6"
        repository: registry.skysolutions.fi/docker.io/1337kavin/piped
        tag: latest@sha256:3930fb9ae8564dac9f2e7c3112373411c80a322f5c8395be3d81b05c5da1188d
        pullPolicy: Always

      config:
        PORT: 8080
        HTTP_WORKERS: 4
        PROXY_PART: https://proxy.piped.fi
        HTTP_PROXY: 127.0.0.1:8888
        #REQWEST_PROXY: http://127.0.0.1:8888
        #DISABLE_REGISTRATION: true
        database:
          connection_url: jdbc:postgresql://postgres-default-rw.database.svc.cluster.local/piped
          secret:
           name: *secret
           username: DB_USERNAME
           password: DB_PASSWORD

    ytproxy:
      enabled: true
      image:
        # Pull-though cache
        repository: registry.skysolutions.fi/docker.io/1337kavin/piped-proxy
        tag: latest@sha256:2ef4096606a0b49104ce31f85cf8cf037d468e3c354435454d8e630cd339e977
        pullPolicy: Always
      env:
        RUST_BACKTRACE: 1

    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        hosts:
          - host: &host piped.fi
            paths:
              - path: "/"
        tls:
          - hosts:
              - *host
            secretName: piped-production-tls

      backend:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN_2}"
        hosts:
          - host: &api_host api.piped.fi
            paths:
              - path: "/"
        tls:
          - hosts:
              - *api_host
            secretName: piped-production-tls


      ytproxy:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN_2}"
        hosts:
          - host: &proxy proxy.piped.fi
            paths:
              - path: "/"
        tls:
          - hosts:
              - *proxy
            secretName: piped-production-tls
    postgresql:
      enabled: false
