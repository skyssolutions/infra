---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: piped
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: piped
      version: 7.1.0
      sourceRef:
        kind: HelmRepository
        name: piped
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    frontend:
      image:
        # Pull-though cache
        repository: registry.skysolutions.fi/docker.io/1337kavin/piped-frontend
        tag: latest
        pullPolicy: Always

      env:
        BACKEND_HOSTNAME: api.piped.fi

    backend:
      podAnnotations:
        configmap.reloader.stakater.com/reload: "piped-backend-config"
      initContainers:
        01-init-db:
          image: ghcr.io/onedr0p/postgres-init:16.8
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: &secret piped-db-creds
      additionalContainers:
        warp:
          image: registry.skysolutions.fi/library/warp-sock5:22022025
          imagePullPolicy: Always
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
      image:
        #repository: registry.skysolutions.fi/library/piped
        #tag: "2024-04-06-2de41b6"
        repository: registry.skysolutions.fi/docker.io/1337kavin/piped
        tag: latest@sha256:56b037eba40dfad308e841b226b07f4afd0658d43680adc1077ea97e59ccf4e0
        pullPolicy: Always

      config:
        PORT: 8080
        HTTP_WORKERS: 4
        PROXY_PART: https://proxy.piped.fi
        #BG_HELPER_URL: https://helper.piped.fi
        #HTTP_PROXY: 127.0.0.1:8888
        REQWEST_PROXY: socks5://127.0.0.1:40000
        #DISABLE_REGISTRATION: true
        database:
          connection_url: jdbc:postgresql://postgres17-rw.database.svc.cluster.local/piped
          secret:
           name: *secret
           username: DB_USERNAME
           password: DB_PASSWORD

    ytproxy:
      enabled: true
      image:
        # Pull-though cache
        repository: registry.skysolutions.fi/docker.io/1337kavin/piped-proxy
        tag: latest@sha256:fb31ef8ee50673b363be6c5162e8a33391f8dac90a0112dd68b00bfa6ac34ad5
        pullPolicy: Always
      env:
        RUST_BACKTRACE: 1
        PROXY: socks5://127.0.0.1:40000
      additionalContainers:
        warp:
          image: registry.skysolutions.fi/library/warp-sock5:22022025
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - NET_ADMIN


    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        hosts:
          - host: &host piped.fi
            paths:
              - path: "/"
        tls:
          - hosts:
              - *host
            secretName: piped-production-tls

      backend:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN_2}"
        hosts:
          - host: &api_host api.piped.fi
            paths:
              - path: "/"
        tls:
          - hosts:
              - *api_host
            secretName: piped-production-tls


      ytproxy:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN_2}"
        hosts:
          - host: &proxy proxy.piped.fi
            paths:
              - path: "/"
        tls:
          - hosts:
              - *proxy
            secretName: piped-production-tls
    postgresql:
      enabled: false
